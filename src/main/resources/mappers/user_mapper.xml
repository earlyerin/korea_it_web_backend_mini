<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.koreait.BoardStudy.mapper.UserMapper">
    <resultMap id="RoleResultMap" type="com.koreait.BoardStudy.entity.Role">
        <id property="roleId" column="role_id" />
        <result property="roleName" column="role_name" />
        <result property="roleNameKor" column="role_name_kor" />
    </resultMap>
    <resultMap id="UserRoleResultMap" type="com.koreait.BoardStudy.entity.UserRole">
        <id property="userRoleId" column="user_role_id" />
        <result property="userId" column="urt_user_id" />
        <result property="roleId" column="urt_role_id" />
        <result property="regDt" column="urt_reg_dt" />
        <result property="updDt" column="urt_upd_dt" />
        <association property="role" resultMap="RoleResultMap" />
    </resultMap>
    <resultMap id="UserResultMap" type="com.koreait.BoardStudy.entity.User">
        <id property="userId" column="user_id" />
        <result property="userName" column="user_name" />
        <result property="password" column="password" />
        <result property="userEmail" column="user_email" />
        <result property="profileImg" column="profile_img" />
        <result property="regDt" column="reg_dt" />
        <result property="updDt" column="upd_dt" />
        <collection property="userRoles" resultMap="UserRoleResultMap" />
    </resultMap>
    <insert id="addUser" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO
            user_tb
        VALUES
            (0, #{userName}, #{password}, #{userEmail}, 'https://firebasestorage.googleapis.com/v0/b/board-23abf.firebasestorage.app/o/profile-img%2Fuser-blue-gradient_78370-4692.avif?alt=media&amp;token=3ecad03c-74ad-4b66-89b1-1155b4a2135e', now(), null);
    </insert>
    <select id="getUserByUserId" resultMap="UserResultMap">
        SELECT
            ut.user_id,
            ut.user_name,
            ut.password,
            ut.user_email,
            ut.profile_img,
            ut.reg_dt,
            ut.upd_dt,

            urt.user_role_id,
            urt.user_id AS urt_user_id,
            urt.role_id AS urt_role_id,
            urt.reg_dt AS urt_reg_dt,
            urt.upd_dt AS urt_upd_dt,

            rt.role_id,
            rt.role_name,
            rt.role_name_kor
        FROM
            user_role_tb AS urt
            LEFT JOIN  user_tb AS ut ON(urt.user_id = ut.user_id)
            LEFT JOIN role_tb AS rt ON(urt.role_id = rt.role_id)
        WHERE
            ut.user_id = #{userId};
    </select>
    <select id="getUserByUserName" resultMap="UserResultMap">
        SELECT
            ut.user_id,
            ut.user_name,
            ut.password,
            ut.user_email,
            ut.profile_img,
            ut.reg_dt,
            ut.upd_dt,

            urt.user_role_id,
            urt.user_id AS urt_user_id,
            urt.role_id AS urt_role_id,
            urt.reg_dt AS urt_reg_dt,
            urt.upd_dt AS urt_upd_dt,

            rt.role_id,
            rt.role_name,
            rt.role_name_kor
        FROM
            user_role_tb AS urt
            LEFT JOIN  user_tb AS ut ON(urt.user_id = ut.user_id)
            LEFT JOIN role_tb AS rt ON(urt.role_id = rt.role_id)
        WHERE
            ut.user_name = #{userName};
    </select>
    <select id="getUserByUserEmail" resultMap="UserResultMap">
        SELECT
            ut.user_id,
            ut.user_name,
            ut.password,
            ut.user_email,
            ut.profile_img,
            ut.reg_dt,
            ut.upd_dt,

            urt.user_role_id,
            urt.user_id AS urt_user_id,
            urt.role_id AS urt_role_id,
            urt.reg_dt AS urt_reg_dt,
            urt.upd_dt AS urt_upd_dt,

            rt.role_id,
            rt.role_name,
            rt.role_name_kor
        FROM
            user_role_tb AS urt
            LEFT JOIN  user_tb AS ut ON(urt.user_id = ut.user_id)
            LEFT JOIN role_tb AS rt ON(urt.role_id = rt.role_id)
        WHERE
            ut.user_email = #{userEmail};
    </select>
    <update id="updatePassword">
        UPDATE
            user_tb
        SET
            password = #{password},
            upd_dt = now()
        WHERE
            user_id = #{userId};
    </update>
    <update id="updateUserName">
        UPDATE
            user_tb
        SET
            user_name = #{userName},
            upd_dt = now()
        WHERE
            user_id = #{userId};
    </update>
    <update id="updateProfileImg">
        UPDATE
            user_tb
        SET
            profile_img = #{profileImg},
            upd_dt = now()
        WHERE
            user_id = #{userId}
    </update>
</mapper>